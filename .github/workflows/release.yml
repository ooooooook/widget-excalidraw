name: Create Release

on:
    push:
        branches:
            - dev
        paths:
            - public/widget.json
            - public/README.md
jobs:
    build:
        runs-on: ubuntu-latest
        steps:

            # Checkout
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GH_TOKEN }}

            - name: Get RELEASE_VERSION
              run: |
                RELEASE_VERSION=`grep -o '"version": "[^"]*",' public/widget.json | sed 's/"version": "//' | sed 's/",$//'`
                RELEASE_VERSION=v$RELEASE_VERSION
                echo "RELEASE_VERSION=$RELEASE_VERSION"
                echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

            # Install dependencies
            - name: Install dependencies
              uses: borales/actions-yarn@v4
              with:
                  cmd: install

            # Build production bundle
            - id: build
              name: Build production bundle
              uses: borales/actions-yarn@v4
              with:
                  cmd: build

            # Copy LICENSE
            - name: Copy LICENSE
              run: |
                cp LICENSE build/

            # Checkout main
            - name: Checkout main
              uses: actions/checkout@v3
              with:
                  ref: main
                  clean: false
                  token: ${{ secrets.GH_TOKEN }}

            # Copy Files
            - name: Copy Files
              run: |
                  find . ! -path "./build*" ! -path "./.git*" -mindepth 1 -delete
                  cp -r -f ./build/* ./
                  rm -r build
                  ls -al

            # Git commit & push
            - name: Git commit & push
              run: |
                git config --global user.name "ooooooook"
                git config --global user.email "che.yx@qq.com"
                git add .
                git status
                git commit -m "update to $RELEASE_VERSION"
                git push -f origin main
                COMMITISH=`git rev-parse main`
                echo "COMMITISH=$COMMITISH"
                echo "COMMITISH=$COMMITISH" >> $GITHUB_ENV

            # Create Release
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  tag_name: ${{ env.RELEASE_VERSION }}
                  release_name: ${{ env.RELEASE_VERSION }}
                  draft: false
                  prerelease: false
                  body: ${{ env.RELEASE_VERSION }}
                  commitish: ${{ env.COMMITISH }}

            # Build Release Asset
            - name: Build Release Asset
              run: |
                rm -rf .git
                zip -r package.zip ./

            # Upload Release Asset
            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./package.zip
                  asset_name: package.zip
                  asset_content_type: application/zip